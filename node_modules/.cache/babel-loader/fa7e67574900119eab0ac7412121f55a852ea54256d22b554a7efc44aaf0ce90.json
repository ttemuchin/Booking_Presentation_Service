{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\REnew\\\\start_app\\\\src\\\\components\\\\Events\\\\Events.js\",\n  _s = $RefreshSig$();\nimport './Events.css';\nimport Card from '../UI/Card';\nimport EventsFilter from \"./EventFilter\";\nimport React, { useState } from \"react\";\nimport EventList from \"./EventList\";\nimport EventsDiagram from './EventsDiagram';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Events(props) {\n  _s();\n  //const [selectedYear, setSelectedYear] = useState('2021');\n\n  // function yearChangeHandler(year) {\n  //     setSelectedYear(year);\n  // }\n\n  const [selectedMonth, setSelectedMonth] = useState('январь');\n  function monthChangeHandler(month) {\n    setSelectedMonth(month);\n  }\n\n  // const filteredEvents = props.events.map(event => (event.date.toLocaleString(\"ru-RU\", \n  //       {month: \"long\"}) === selectedMonth))\n  console.log(props.event.date.toLocaleString(\"ru-RU\", {\n    month: \"long\"\n  }));\n  const filteredEvents = props.events.filter(event => {\n    return event.date.toLocaleString(\"ru-RU\", {\n      month: \"long\"\n    }) === selectedMonth;\n  });\n\n  // const filteredCosts = props.costs.filter(cost => {\n  //   return cost.date.getFullYear().toString() === selectedYear;\n  // })\n  // карточка - фильтр - диаграмма - список\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"events\",\n      children: [/*#__PURE__*/_jsxDEV(EventsFilter, {\n        month: selectedMonth,\n        onChangeMonth: monthChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EventsDiagram, {\n        events: filteredEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EventList, {\n        events: filteredEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 8\n  }, this);\n}\n_s(Events, \"gOJEo3wv8wtRMPtBCdhaDBWYzNw=\");\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["Card","EventsFilter","React","useState","EventList","EventsDiagram","jsxDEV","_jsxDEV","Events","props","_s","selectedMonth","setSelectedMonth","monthChangeHandler","month","console","log","event","date","toLocaleString","filteredEvents","events","filter","children","className","onChangeMonth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/REnew/start_app/src/components/Events/Events.js"],"sourcesContent":["import './Events.css';\r\nimport Card from '../UI/Card';\r\nimport EventsFilter from \"./EventFilter\";\r\nimport React, {useState} from \"react\";\r\nimport EventList from \"./EventList\";\r\nimport EventsDiagram from './EventsDiagram';\r\n\r\nfunction Events(props){\r\n\r\n    //const [selectedYear, setSelectedYear] = useState('2021');\r\n\r\n    // function yearChangeHandler(year) {\r\n    //     setSelectedYear(year);\r\n    // }\r\n\r\n    const [selectedMonth, setSelectedMonth] = useState('январь');\r\n    function monthChangeHandler(month) {\r\n        setSelectedMonth(month);\r\n    }\r\n\r\n    // const filteredEvents = props.events.map(event => (event.date.toLocaleString(\"ru-RU\", \r\n    //       {month: \"long\"}) === selectedMonth))\r\n    console.log(props.event.date.toLocaleString(\"ru-RU\", \r\n    {month: \"long\"}))\r\n    const filteredEvents = props.events.filter(event => {\r\n          return event.date.toLocaleString(\"ru-RU\", \r\n          {month: \"long\"}) === selectedMonth;\r\n        })\r\n\r\n    // const filteredCosts = props.costs.filter(cost => {\r\n    //   return cost.date.getFullYear().toString() === selectedYear;\r\n    // })\r\n// карточка - фильтр - диаграмма - список\r\n    return (\r\n       <div>\r\n        <Card className=\"events\">\r\n          <EventsFilter month={selectedMonth} \r\n          onChangeMonth={monthChangeHandler}/>\r\n          <EventsDiagram events={filteredEvents} />\r\n          <EventList events={filteredEvents}/>          \r\n        </Card>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Events;"],"mappings":";;AAAA,OAAO,cAAc;AACrB,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,YAAY,MAAM,eAAe;AACxC,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,MAAMA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAElB;;EAEA;EACA;EACA;;EAEA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,QAAQ,CAAC;EAC5D,SAASU,kBAAkBA,CAACC,KAAK,EAAE;IAC/BF,gBAAgB,CAACE,KAAK,CAAC;EAC3B;;EAEA;EACA;EACAC,OAAO,CAACC,GAAG,CAACP,KAAK,CAACQ,KAAK,CAACC,IAAI,CAACC,cAAc,CAAC,OAAO,EACnD;IAACL,KAAK,EAAE;EAAM,CAAC,CAAC,CAAC;EACjB,MAAMM,cAAc,GAAGX,KAAK,CAACY,MAAM,CAACC,MAAM,CAACL,KAAK,IAAI;IAC9C,OAAOA,KAAK,CAACC,IAAI,CAACC,cAAc,CAAC,OAAO,EACxC;MAACL,KAAK,EAAE;IAAM,CAAC,CAAC,KAAKH,aAAa;EACpC,CAAC,CAAC;;EAEN;EACA;EACA;EACJ;EACI,oBACGJ,OAAA;IAAAgB,QAAA,eACChB,OAAA,CAACP,IAAI;MAACwB,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACtBhB,OAAA,CAACN,YAAY;QAACa,KAAK,EAAEH,aAAc;QACnCc,aAAa,EAAEZ;MAAmB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACpCtB,OAAA,CAACF,aAAa;QAACgB,MAAM,EAAED;MAAe;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCtB,OAAA,CAACH,SAAS;QAACiB,MAAM,EAAED;MAAe;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGZ;AAACnB,EAAA,CArCQF,MAAM;AAAAsB,EAAA,GAANtB,MAAM;AAuCf,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}