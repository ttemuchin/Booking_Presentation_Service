{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\REnew\\\\start_app\\\\src\\\\components\\\\Events\\\\Events.js\",\n  _s = $RefreshSig$();\nimport './Events.css';\nimport Card from '../UI/Card';\nimport EventsFilter from \"./EventFilter\";\nimport React, { useState } from \"react\";\nimport EventList from \"./EventList\";\nimport EventsDiagram from './EventsDiagram';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Events(props) {\n  _s();\n  //const [selectedYear, setSelectedYear] = useState('2021');\n\n  // function yearChangeHandler(year) {\n  //     setSelectedYear(year);\n  // }\n\n  const [selectedMonth, setSelectedMonth] = useState('январь');\n  function monthChangeHandler(month) {\n    setSelectedMonth(month);\n  }\n  const filteredEvents = props.events.map(event => event.datetoLocaleString(\"ru-RU\", {\n    month: \"long\"\n  }) === selectedMonth);\n  // const filteredEvents = props.events.filter(event => {\n  //       return event.date.toLocaleString(\"ru-RU\", \n  //       {month: \"long\"}) === selectedMonth;\n  //     })\n\n  // const filteredCosts = props.costs.filter(cost => {\n  //   return cost.date.getFullYear().toString() === selectedYear;\n  // })\n  // карточка - фильтр - диаграмма - список\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"events\",\n      children: [/*#__PURE__*/_jsxDEV(EventsFilter, {\n        month: selectedMonth,\n        onChangeMonth: monthChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EventsDiagram, {\n        events: filteredEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EventList, {\n        events: filteredEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 8\n  }, this);\n}\n_s(Events, \"gOJEo3wv8wtRMPtBCdhaDBWYzNw=\");\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["Card","EventsFilter","React","useState","EventList","EventsDiagram","jsxDEV","_jsxDEV","Events","props","_s","selectedMonth","setSelectedMonth","monthChangeHandler","month","filteredEvents","events","map","event","datetoLocaleString","children","className","onChangeMonth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/REnew/start_app/src/components/Events/Events.js"],"sourcesContent":["import './Events.css';\r\nimport Card from '../UI/Card';\r\nimport EventsFilter from \"./EventFilter\";\r\nimport React, {useState} from \"react\";\r\nimport EventList from \"./EventList\";\r\nimport EventsDiagram from './EventsDiagram';\r\n\r\nfunction Events(props){\r\n\r\n    //const [selectedYear, setSelectedYear] = useState('2021');\r\n\r\n    // function yearChangeHandler(year) {\r\n    //     setSelectedYear(year);\r\n    // }\r\n\r\n    const [selectedMonth, setSelectedMonth] = useState('январь');\r\n    function monthChangeHandler(month) {\r\n        setSelectedMonth(month);\r\n    }\r\n\r\n    const filteredEvents = props.events.map(event => (event.datetoLocaleString(\"ru-RU\", \r\n          {month: \"long\"}) === selectedMonth))\r\n    // const filteredEvents = props.events.filter(event => {\r\n    //       return event.date.toLocaleString(\"ru-RU\", \r\n    //       {month: \"long\"}) === selectedMonth;\r\n    //     })\r\n\r\n    // const filteredCosts = props.costs.filter(cost => {\r\n    //   return cost.date.getFullYear().toString() === selectedYear;\r\n    // })\r\n// карточка - фильтр - диаграмма - список\r\n    return (\r\n       <div>\r\n        <Card className=\"events\">\r\n          <EventsFilter month={selectedMonth} \r\n          onChangeMonth={monthChangeHandler}/>\r\n          <EventsDiagram events={filteredEvents} />\r\n          <EventList events={filteredEvents}/>          \r\n        </Card>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Events;"],"mappings":";;AAAA,OAAO,cAAc;AACrB,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,YAAY,MAAM,eAAe;AACxC,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,MAAMA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAElB;;EAEA;EACA;EACA;;EAEA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,QAAQ,CAAC;EAC5D,SAASU,kBAAkBA,CAACC,KAAK,EAAE;IAC/BF,gBAAgB,CAACE,KAAK,CAAC;EAC3B;EAEA,MAAMC,cAAc,GAAGN,KAAK,CAACO,MAAM,CAACC,GAAG,CAACC,KAAK,IAAKA,KAAK,CAACC,kBAAkB,CAAC,OAAO,EAC5E;IAACL,KAAK,EAAE;EAAM,CAAC,CAAC,KAAKH,aAAc,CAAC;EAC1C;EACA;EACA;EACA;;EAEA;EACA;EACA;EACJ;EACI,oBACGJ,OAAA;IAAAa,QAAA,eACCb,OAAA,CAACP,IAAI;MAACqB,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACtBb,OAAA,CAACN,YAAY;QAACa,KAAK,EAAEH,aAAc;QACnCW,aAAa,EAAET;MAAmB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACpCnB,OAAA,CAACF,aAAa;QAACW,MAAM,EAAED;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCnB,OAAA,CAACH,SAAS;QAACY,MAAM,EAAED;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGZ;AAAChB,EAAA,CAnCQF,MAAM;AAAAmB,EAAA,GAANnB,MAAM;AAqCf,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}